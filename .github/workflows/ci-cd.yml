name: Validate, build, and deploy the landscape to GitHub Pages

on:
  push: # Allows you to run this workflow on push events to main
    branches:
      - main
  pull_request: # Allows you to run this workflow on pull requests to main
    branches:
      - main
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
  contents: read
  pages: write
  id-token: write

defaults: # Default to bash
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-latest
    outputs:
      has_pages: ${{ steps.has-pages.outputs.has_pages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set 'has_pages' to output
        id: has-pages
        run: echo "has_pages=$(gh api repos/${{ github.repository }} --jq .has_pages)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install landscape2 with cached Homebrew
        uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: cncf/landscape2/landscape2

      - name: Validate the landscape
        run: |
          landscape2 validate data --data-file ./landscape.yml
          landscape2 validate settings --settings-file ./settings.yml

      - name: Build the landscape
        run: landscape2 build --data-file ./landscape.yml --settings-file ./settings.yml --logos-path ./hosted_logos/ --output-dir ./build/

      - name: Setup Pages
        uses: actions/configure-pages@v5
        if: github.ref == 'refs/heads/main' && steps.has-pages.outputs.has_pages == 'true'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main' && steps.has-pages.outputs.has_pages == 'true'
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && needs.build.outputs.has_pages == 'true'
    concurrency: # Allow one concurrent deployment
      group: "pages"
      cancel-in-progress: true
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
